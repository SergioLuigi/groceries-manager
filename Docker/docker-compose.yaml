version: '3.9'

services:
  groceries-manager:
    image: sergioluigi/groceries-manager:0.0.1
    container_name: groceries-manager
    restart: always
    build:
      context: ../
      dockerfile: Docker/Dockerfile
    environment:
      SPRING_DATA_MONGODB_DATABASE: ${MONGO_DATABASE}
      SPRING_DATA_MONGODB_PASSWORD: ${MONGO_PASSWORD}
      SPRING_DATA_MONGODB_HOST: mongo #database service name
      SPRING_DATA_MONGODB_PORT: ${MONGO_PORT}
      SPRING_DATA_MONGODB_USERNAME: ${MONGO_USERNAME}
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - deploy-spring-boot-mongo
  mongo:
    image: mongo
    container_name: groceriesManagerDB
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/${MONGO_DATABASE} --quiet
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    ports:
      - "27017"
    networks:
      - deploy-spring-boot-mongo
    volumes:
      #- ./mongo-bootstrap.js:/docker-entrypoint-initdb.d/mongo-bootstrap.js:ro
      - ~/Projetos/Volumes/groceries-manager:/data/
networks:
  deploy-spring-boot-mongo:
    driver: bridge
